{"version":3,"file":"static/js/336.7f16b9e5.chunk.js","mappings":"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","sources":["components/CreateContactForm/CreateContactForm.styled.jsx","components/CreateContactForm/CreateContactForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","redux/contacts/contacts-selectors.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const Section = styled.section`\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n`;\nexport const H1 = styled.h1`\n  text-align: center;\n  font-weight: 500;\n  color: #707070;\n`;\n\nexport const Form = styled.form`\n  \n  padding: 10px;\n  border-radius: 10px;\n  \n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n  max-width: 250px;\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 700px;\n  }\n`;\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n\n  @media (min-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 14px;\n  color: #8a8a8a;\n  transition: all 0.3s ease;\n`;\nexport const StyledInput = styled.input`\n  height: 20px;\n  transition: all 0.3s ease;\n  border: 1px solid #cacaca;\n  border-radius: 4px;\n  outline: none;\n  padding: 2px 4px;\n\n  &:focus {\n    border-color: #aaaaaa;\n\n    + label {\n      color: orangered;\n    }\n  }\n`;\n\nexport const StyledBtn = styled.button`\n  transition: all 0.3s ease;\n  border: 1px solid #cacaca;\n  background-color: white;\n  border-radius: 4px;\n  height: 26px;\n  padding: 4px 8px;\n  color: #707070;\n\n  align-self: flex-end;\n  @media (min-width: 768px) {\n    padding: 4px 16px;\n  }\n\n  cursor: pointer;\n  &:hover {\n    background-color: orangered;\n    color: white;\n    outline: none;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Section,\n  Form,\n  H1,\n  InputWrap,\n  StyledLabel,\n  StyledInput,\n  StyledBtn,\n  Wrap,\n} from './CreateContactForm.styled';\n\nconst CreateContactForm = ({ onSubmit }) => {\n  const [contact, setContact] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleChange = e => {\n    setContact(prev => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n  const { name, number } = contact;\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setContact({ name: '', number: '' });\n  };\n  return (\n    <Section>\n      <H1>Phonebook</H1>\n      <Form onSubmit={handleSubmit}>\n        <Wrap>\n          <InputWrap>\n            <StyledInput\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <StyledLabel>Name</StyledLabel>\n          </InputWrap>\n\n          <InputWrap>\n            <StyledInput\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <StyledLabel>Number</StyledLabel>\n          </InputWrap>\n          <StyledBtn type=\"submit\">Add contact</StyledBtn>\n        </Wrap>\n      </Form>\n    </Section>\n  );\n};\nCreateContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default CreateContactForm;\n","import styled from 'styled-components';\nexport const Section = styled.section`\n  margin-top: 24px;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n`;\n\nexport const H2 = styled.h1`\n  font-weight: 500;\n  font-size: 18px;\n\n  color: #707070;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n  max-width: 250px;\n  align-items: center;\n  @media (min-width: 768px) {\n    max-width: 700px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n  max-width: 250px;\n  align-items: center;\n  @media (min-width: 768px) {\n    max-width: 700px;\n  }\n`;\n","import styled from 'styled-components';\nexport const Input = styled.input`\n  margin-left: auto;\n  height: 20px;\n  transition: all 0.3s ease;\n  border: 1px solid #cacaca;\n  border-radius: 4px;\n  outline: none;\n  padding: 2px 4px;\n  max-width: 120px;\n  @media (min-width: 768px) {\n    max-width: 250px;\n  }\n  &::placeholder {\n    color: orangered;\n  }\n  &:focus {\n    border-color: #aaaaaa;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Input } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"filter by name\"\n    />\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import styled from 'styled-components';\nimport { MdDeleteForever, MdOutlineContactPage } from 'react-icons/md';\n\nexport const Icon = styled(MdDeleteForever)`\n  color: #858585;\n  width: 20px;\n  height: 20px;\n  @media (min-width: 768px) {\n    width: 30px;\n    height: 30px;\n  }\n  &:hover {\n    color: #9c0000;\n  }\n`;\nexport const ContactIcon = styled(MdOutlineContactPage)`\n  color: #757575;\n  height: 15px;\n  width: 15px;\n  @media (min-width: 768px) {\n    height: 25px;\n    width: 25px;\n  }\n`;\n\nexport const Btn = styled.button`\n  outline: none;\n  border: none;\n  cursor: pointer;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  background-color: #eeeeee;\n  border-radius: 4px;\n  padding: 10px;\n  margin-bottom: 10px;\n  gap: 10px;\n  & p {\n    margin: 0;\n    font-size: 10px;\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n  & button {\n    margin-left: auto;\n    padding: 2px 4px;\n    @media (min-width: 768px) {\n      padding: 4px 8px;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ListItem, Icon, Btn, ContactIcon } from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <ListItem key={id}>\n      <ContactIcon />\n      <p>{name}:</p>\n      <p>{number}</p>\n      <Btn onClick={() => onDeleteContact(id)}>\n        <Icon />\n      </Btn>\n    </ListItem>\n  );\n};\nContactItem.propTypes = {\n  contact: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      createdAt: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      onDeleteContact: PropTypes.func.isRequired,\n    })\n  ),\n};\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { Section, H2, Wrap, List } from './ContactsList.styled';\nimport Filter from 'components/Filter';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact, value, onChange }) => {\n  return (\n    <Section>\n      <Wrap>\n        <H2>Contacts ({contacts.length})</H2>\n        <Filter value={value} onChange={onChange} />\n      </Wrap>\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <ContactItem\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContact={() => onDeleteContact(id)}\n          />\n        ))}\n      </List>\n    </Section>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      createdAt: PropTypes.string,\n    })\n  ),\n};\n\nexport default ContactList;\n","export const getFilteredContacts = ({ contacts, filter }) => {\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    const normalizedName = name.toLowerCase();\n    return normalizedName.includes(normalizedFilter);\n  });\n  return result;\n};\n","import CreateContactForm from 'components/CreateContactForm/CreateContactForm';\nimport ContactList from 'components/ContactsList/ContactsList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from '../../redux/contacts/contacts-operations';\nimport { setFilter } from '../../redux/filter/filter-slice';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { useEffect } from 'react';\n\nconst Contacts = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const filter = useSelector(store => store.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = payload => {\n    const action = addContact(payload);\n    dispatch(action);\n  };\n\n  const onRemoveContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <main>\n      <CreateContactForm onSubmit={onAddContact} />\n      <ContactList\n        contacts={contacts}\n        onDeleteContact={onRemoveContact}\n        value={filter}\n        onChange={onSetFilter}\n      />\n    </main>\n  );\n};\nexport default Contacts;\n"],"names":["Section","styled","H1","Form","Wrap","InputWrap","StyledLabel","StyledInput","StyledBtn","onSubmit","useState","name","number","contact","setContact","handleChange","e","prev","target","value","reset","preventDefault","type","onChange","pattern","title","required","H2","List","Input","placeholder","Icon","MdDeleteForever","ContactIcon","MdOutlineContactPage","Btn","ListItem","id","onDeleteContact","onClick","contacts","length","map","getFilteredContacts","normalizedFilter","filter","toLowerCase","items","includes","useSelector","store","dispatch","useDispatch","useEffect","fetchContacts","payload","action","addContact","removeContact","setFilter"],"sourceRoot":""}